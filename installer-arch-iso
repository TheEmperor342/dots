#! /bin/sh

echo "THIS SCRIPT MAY NOT WORK FOR YOU. PROCEED AT YOUR OWN RISK."
echo "This installer assumes a stable internet connection, and a UEFI system."
timedatectl set-ntp true
read -p "==> Do you have an intel or an amd cpu? (i/a): " cpu
case $cpu in  
  i|I) cpu="intel";; 
  a|A) cpu="amd";; 
  *) exit;; 
esac

lsblk
echo "Choose a drive to install to. Only state the name (e.g. sda, sdb)"
read -p "==> " sda
echo "Make a GPT label with the following partitions: "
echo "/dev/${sda}1......512M.......EFI SYSTEM PARTITION"
echo "/dev/${sda}2......X GB.......LINUX SWAP"
echo "/dev/${sda}3......X GB.......LINUX FILESYSTEM"
echo "Press enter to continue"
read
cfdisk /dev/$sda
echo "==> Updating parallel downloads in pacman"
sed -i "s/^#ParallelDownloads = 5$/ParallelDownloads = 5/" /etc/pacman.conf
pacman -S rsync --noconfirm --needed
echo "==> Updating pacman mirrors"
reflector --verbose --country 'India' -l 5 --sort rate --save /etc/pacman.d/mirrorlist
echo "==> Updating keyring"
pacman --noconfirm -Sy archlinux-keyring

echo "==> Making FAT32 on /dev/sda1"
mkfs.fat -F32 /dev/${sda}1
echo "==> Making and mounting swap on /dev/sda2"
mkswap /dev/${sda}2
swapon /dev/${sda}2
echo "==> Making ext4 on /dev/sda3"
mkfs.ext4 /dev/${sda}3
echo "==> Mounting partitions"
mount /dev/${sda}3 /mnt
mkdir /mnt/boot/
mount /dev/${sda}1 /mnt/boot/

echo "==> Pacstrap"
pacstrap /mnt base base-devel linux-lts linux-lts-headers linux-firmware neovim git networkmanager $cpu\-ucode
echo "==> Generating fstab"
genfstab -U /mnt >> /mnt/etc/fstab
sed '1,/^#part2$/d' `basename $0` > /mnt/arch_install2.sh
chmod +x /mnt/arch_install2.sh
arch-chroot /mnt ./arch_install2.sh $cpu $sda

read -p "Reboot now? [y/n]: " do_reboot

case $do_reboot in  
  y|Y) umount -R /mnt && swapoff /dev/${sda}2 && reboot;; 
  *) exit;; 
esac

#part2

read -p "==> Username: " username
read -p "==> Password: " password
read -p "==> Machine Hostname: " hostname

pacman -S --noconfirm --needed sed reflector rsync

echo "==> Updating mirrors"
reflector --verbose --country 'India' -l 5 --sort rate --save /etc/pacman.d/mirrorlist
sed -i "s/^#ParallelDownloads = 5$/ParallelDownloads = 5/" /etc/pacman.conf
ln -sf /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
hwclock --systohc
echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf
echo "KEYMAP=us" > /etc/vconsole.conf
echo $hostname > /etc/hostname
echo "127.0.0.1       localhost" >> /etc/hosts
echo "::1             localhost" >> /etc/hosts
echo "127.0.1.1       $hostname.localdomain $hostname" >> /etc/hosts

echo "==> Enabling NetworkManager"
systemctl enable NetworkManager
echo "==> Setting root password"
echo -e "$password\n$password" | passwd
mkinitcpio -P

echo "==> Install systemd-boot"
bootctl install
echo -e "\ndefault arch" >> /boot/loader/loader.conf
echo -e "timeout 5" >> /boot/loader/loader.conf
echo -e "editor no" >> /boot/loader/loader.conf

echo "title Arch Linux" >> /boot/loader/entries/arch.conf
echo "linux /vmlinuz-linux-lts" >> /boot/loader/entries/arch.conf
echo "initrd /${1}-ucode.img" >> /boot/loader/entries/arch.conf
echo "initrd /initramfs-linux-lts.img" >> /boot/loader/entries/arch.conf
echo "options root=/dev/${2}3 rw" >> /boot/loader/entries/arch.conf

echo "title Arch Linux Fallback" >> /boot/loader/entries/arch-fallback.conf
echo "linux /vmlinuz-linux-lts" >> /boot/loader/entries/arch-fallback.conf
echo "initrd /${1}-ucode.img" >> /boot/loader/entries/arch-fallback.conf
echo "initrd /initramfs-linux-lts-fallback.img" >> /boot/loader/entries/arch-fallback.conf
echo "options root=/dev/${2}3 rw" >> /boot/loader/entries/arch-fallback.conf

echo "title Arch Linux Terminal" >> /boot/loader/entries/arch-terminal.conf
echo "linux /vmlinuz-linux-lts" >> /boot/loader/entries/arch-terminal.conf
echo "initrd /${1}-ucode.img" >> /boot/loader/entries/arch-terminal.conf
echo "initrd /initramfs-linux-lts.img" >> /boot/loader/entries/arch-terminal.conf
echo "options root=/dev/${2}3 rw systemd.unit=multi-user.target" >> /boot/loader/entries/arch-terminal.conf

systemctl enable systemd-boot-update.service

echo "==> Create \"$username\" user"
useradd -m -g users -G audio,video,network,wheel,storage,input,rfkill $username
echo -e "$password\n$password" | passwd $username

echo "%wheel ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

ai3_path=/home/$username/arch_install3.sh
sed '1,/^#part3$/d' arch_install2.sh > $ai3_path
chown $username $ai3_path
chmod +x $ai3_path
su -c $ai3_path -s /bin/sh $password $username
exit 

#part3
echo "==> Install yay"
cd $HOME
mkdir archinstall
cd archinstall
git clone https://aur.archlinux.org/yay-bin.git
cd yay-bin
makepkg -si
cd ..

echo "==> Installing packages for dotfiles"
yay -S --noconfirm --needed mesa mesa-utils pipewire wireplumber \
	alsa-utils pipewire-alsa pipewire-pulse pipewire-jack pipewire-audio \
	xorg-server xorg-xinit xorg-xrandr xorg-xsetroot xorg-xprop \
	bspwm-rounded-corners sxhkd firefox ffmpeg nitrogen dunst picom \
	kitty brightnessctl playerctl polybar bluez bluez-utils blueman \
	network-manager-applet python python-pip ttf-jetbrains-mono-nerd \
	noto-fonts noto-fonts-emoji noto-fonts-cjk lxsession lxappearance \
	xdotool jq tidy rofi libinput-gestures tlp libnotify zsh \
	zsh-autosuggestions zsh-syntax-highlighting pcmanfm-gtk3 \
	bash-completion unzip unrar xarchiver catppuccin-gtk-theme-mocha \
	vlc ntfs-3g


echo "==> Deploy dotfiles"
mkdir -p $HOME/.config/
cd $HOME/
cfgDir=$HOME/.config
dotDir=$HOME/.dotfiles/home/.config
git clone https://github.com/TheEmperor342/dots .dotfiles

echo "-> Symlinking dotfiles"
ln -sf ${dotDir}/bspwm ${cfgDir}
ln -sf ${dotDir}/dunst ${cfgDir}
ln -sf ${dotDir}/eww ${cfgDir}
ln -sf ${dotDir}/kitty ${cfgDir}
ln -sf ${dotDir}/nvim ${cfgDir}
ln -sf ${dotDir}/picom ${cfgDir}
ln -sf ${dotDir}/polybar ${cfgDir}
ln -sf ${dotDir}/rofi ${cfgDir}
ln -sf ${dotDir}/sxhkd ${cfgDir}
ln -sf ${dotDir}/Wallpapers ${cfgDir}
ln -sf ${dotDir}/colors.py ${cfgDir}
ln -sf ${dotDir}/libinput-gestures.conf ${cfgDir}
ln -sf $HOME/.dotfiles/home/.zshrc $HOME
ln -sf $HOME/.dotfiles/home/.xinitrc $HOME

echo "==> Changing default shell to zsh"
echo -e "$1" | chsh -s /usr/bin/zsh $2

sudo sed -i "s/%wheel ALL=(ALL) NOPASSWD: ALL/%wheel ALL=(ALL) ALL/" /etc/sudoers
echo "### Install complete."
echo "You may want to install drivers for NVIDIA or AMD GPU."
exit
